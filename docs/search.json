[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ST230 Supplement",
    "section": "",
    "text": "Welcome!\nThis is not a textbook nor is it course notes. This is just a collection of interactive examples that I will use in class.",
    "crumbs": [
      "Welcome!"
    ]
  },
  {
    "objectID": "01-combinations_in_R.html",
    "href": "01-combinations_in_R.html",
    "title": "1  Combinations/Permutations in R",
    "section": "",
    "text": "1.1 Generating Events in R\nWe can roll a single dice as follows:\nWe can also roll many dice:",
    "crumbs": [
      "Pre-Midterm",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Combinations/Permutations in R</span>"
    ]
  },
  {
    "objectID": "01-combinations_in_R.html#generating-events-in-r",
    "href": "01-combinations_in_R.html#generating-events-in-r",
    "title": "1  Combinations/Permutations in R",
    "section": "",
    "text": "Please enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Pre-Midterm",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Combinations/Permutations in R</span>"
    ]
  },
  {
    "objectID": "01-combinations_in_R.html#combinations-and-permutations-in-r",
    "href": "01-combinations_in_R.html#combinations-and-permutations-in-r",
    "title": "1  Combinations/Permutations in R",
    "section": "1.2 Combinations and Permutations in R",
    "text": "1.2 Combinations and Permutations in R\nHow many ways can we choose 2 items from a list of 4 things?\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWe can look at all of these combinations using the combn() function:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nWhat if order matters? In this case, there are \\(2!\\) times as many ways to do it (that’s “two factorial”, not just me yelling the word “TWO!!!”, although in this case they’re the same number).\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nNotice that there are twice as many possibilities! In the output of combn(), we could take each column and just reverse the order. This gives us 6 more possibilities.\nIf we were choosing three items, then each combination could be rearranged in six different permutations. In this case, the number of permutations is 6 (3!) times as large as the number of combinations.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Pre-Midterm",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Combinations/Permutations in R</span>"
    ]
  },
  {
    "objectID": "01-combinations_in_R.html#all-combinations-of-different-variables-tree-diagrams",
    "href": "01-combinations_in_R.html#all-combinations-of-different-variables-tree-diagrams",
    "title": "1  Combinations/Permutations in R",
    "section": "1.3 All Combinations of Different Variables (Tree Diagrams)",
    "text": "1.3 All Combinations of Different Variables (Tree Diagrams)\nThe expand.grid() function can be very helpful with arbitrary collections of things. For the cars example in class:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Pre-Midterm",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Combinations/Permutations in R</span>"
    ]
  },
  {
    "objectID": "01-combinations_in_R.html#probabilities",
    "href": "01-combinations_in_R.html#probabilities",
    "title": "1  Combinations/Permutations in R",
    "section": "1.4 Probabilities",
    "text": "1.4 Probabilities\nProbabilities as long-run frequencies: We used some code to generate 100 dice rolls before. We can use this to demonstrate probability!\nIf we were to roll 6,000 dice, how many of them would show a 1? Note that the following two statements are different!\n\nA 1 should show up in 1/6 rolls, so we expect approximately 1,000 1s.\nIf we get 1,000 1s, then the probability is approximately 1/6.\n\nOur definition is based on the second point, but instead of 6,000 times we roll the dice an infinite number of times (although I don’t recommend literally doing this, that will hurt your wrist).\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nProbabilities from theory: For the combinations/permutations, we can basically use R as a calculator.\nL02 notes Example 1.3.1: What is the probability of drawing an ace from a well-shuffled deck of 52 playing cards?\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nL02 notes Example 1.3.2: Find the probability that a randomly chosen Lotto Max entry wins the Jackpot.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nL02 notes Example 1.3.2: Probability of matching 6 out of 7 numbers: \\(P(6\\text{ out of }7) = \\dfrac{\\phantom{1}_{7}C_6 \\phantom{1}_{42}C_1}{ \\phantom{1}_{49}C_7}\\)\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Pre-Midterm",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Combinations/Permutations in R</span>"
    ]
  },
  {
    "objectID": "02-Probability.html",
    "href": "02-Probability.html",
    "title": "2  Simple Probabilities",
    "section": "",
    "text": "2.1 Lecture 02 Calculations\nThe probability of winning Lotto Max is:\nThe probability of matching 6 out of 7 numbers is:\n\\[\n\\dfrac{(\\text{Choose 6 out of 7 correct numbers})\\cdot(\\text{Choose 1 out of 42 incorrect numbers})}{\\text{Choose 7 out of 49 numbers}}\n\\]\nFor any number \\(k\\) (between 0 and 7), the probability of matching \\(k\\) numbers is:",
    "crumbs": [
      "Pre-Midterm",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Simple Probabilities</span>"
    ]
  },
  {
    "objectID": "02-Probability.html#lecture-02-calculations",
    "href": "02-Probability.html#lecture-02-calculations",
    "title": "2  Simple Probabilities",
    "section": "",
    "text": "Please enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Pre-Midterm",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Simple Probabilities</span>"
    ]
  },
  {
    "objectID": "02-Probability.html#lecture-04-calculations",
    "href": "02-Probability.html#lecture-04-calculations",
    "title": "2  Simple Probabilities",
    "section": "2.2 Lecture 04 Calculations",
    "text": "2.2 Lecture 04 Calculations\nContinuing with the lottery, we have:\n\n$70 million if you match all 7 numbers\n$5000 if you match 6 numbers\n-$1.66 if you match 5 or less (this is the approximate cost of a ticket)\n\nWe’ve already calculated P(all 7 matches) and P(6 outta 7 matches). To calculate P(5 or fewer matches), we note that:\n\nP(all 7) + P(6 outta 7) + P(5 or fewer) = 1\n\nThe three events represent all possible outcomes, and are disjoint\nIn other words, they form a partition of the sample space\n\nTherefore we can rearrange to P(5 or fewer) = 1 - P(all 7) - P(6 outta 7).\n\nThe expectation (mean) can be found as follows:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nIf you played the lottery millions of times, you can expect to lose $0.82 each time. Even if you win the jackpot, you’ll still end up losing money if you play enough times!\nFor a Bernoulli R.V., the variance is p(1-p). When is the variance as high as possible?\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHere’s what the plot looks like for all possible values of p:\n\n\nShow the code\np &lt;- seq(0, 1, 0.01)\nv_p &lt;- p * (1 - p)\nplot(x = p, y = v_p, type = \"l\")\n\n\n\n\n\n\n\n\n\nThe binomial distribution formula can be inputted directly into R.\nFor the lecture notes, we need \\(P(X = 0)\\) where \\(X \\sim Binom(0.02, 52)\\):\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nHowever, R is a statistical programming language. Of course it has distributions built in! The distribution function always starts with the letter d.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nThe cumulative distribution function is also very useful. In R, the cumulative distribution functions always start with a p.\nNote that \\(P(X \\ge 3) = 1 - P(X \\le 2)\\). We’ll first calculate \\(P(X \\le 2)\\):\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nAnd so the answer is:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Pre-Midterm",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Simple Probabilities</span>"
    ]
  },
  {
    "objectID": "02-Probability.html#mean-and-variance",
    "href": "02-Probability.html#mean-and-variance",
    "title": "2  Simple Probabilities",
    "section": "2.3 Mean and Variance",
    "text": "2.3 Mean and Variance\nThe following code will help with the card drawing example as well as the expected lottery winnings.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Pre-Midterm",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Simple Probabilities</span>"
    ]
  },
  {
    "objectID": "03-Distributions.html",
    "href": "03-Distributions.html",
    "title": "3  Discrete Distribution Functions",
    "section": "",
    "text": "3.1 Binomial Distribution\nThe binomial distribution formula can be inputted directly into R.\nFor the lecture notes, we need \\(P(X = 0)\\) where \\(X \\sim Binom(0.02, 52)\\):\nHowever, R is a statistical programming language. Of course it has distributions built in! The distribution function always starts with the letter d.\nThe cumulative distribution function is also very useful. In R, the cumulative distribution functions always start with a p.\nNote that \\(P(X \\ge 3) = 1 - P(X \\le 2)\\). We’ll first calculate \\(P(X \\le 2)\\):\nAnd so the answer is:\nThe question above found \\(P(X \\ge 3)\\) is approximately 8%. What if we were given that \\(P(X \\le q)\\) is equal to \\(p\\) (where \\(p\\) is given), how would we find \\(q\\)?\nLet’s go back to the coin flipping example. Suppose now we’re flipping 50 coins. We expect that 50% of the time, we’ll get 25 or fewer heads. That is, \\(P(X \\le 25) = 0.5\\). How many heads do we need to flip in order for \\(P(X \\le x)\\) to be equal to 25%?\nIn the double check, we see that \\(P(X \\le 47)\\) is actually equal to 33%?!?! Why is this? Let’s see what happens if we check the next number down.\nThe probability that X is less than 22 is less than 25%. By convention, The inverse CDF is a function that finds the value \\(q\\) such that \\(P(X \\le q)\\) is at least \\(p\\). This is easier to see in the plot of the cdf:\nThere’s clearly no place where the cdf is equal to 0.25. Instead, we could choose either 0.24 (\\(P(X \\le 22)\\)) or 0.33 (\\(P(X \\le 23)\\)). It might seem convenient to take the closest point, but mathematicians always prefer consistency. In this case, consistency means always rounding up.",
    "crumbs": [
      "Pre-Midterm",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Discrete Distribution Functions</span>"
    ]
  },
  {
    "objectID": "03-Distributions.html#binomial-distribution",
    "href": "03-Distributions.html#binomial-distribution",
    "title": "3  Discrete Distribution Functions",
    "section": "",
    "text": "Please enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nProbability Distributions are the d* series of functions.\n\n\n\ndbinom(x = x, size = n, prob = p) calculates \\(P(X = x)\\), where \\(X \\sim Binom(n, p)\\).\n\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nCumulative Distribution Functions (CDFs) are the p* series of functions\n\n\n\npbinom(q = x, size = n, prob = p) calculates \\(P(X \\le x)\\), where \\(X \\sim Binom(n, p)\\).\n\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nInverse CDFs are the q* family of functions\n\n\n\nqbinom(p = p, size = n, prob = prob) finds \\(q\\) in the equation \\(P(X \\le q) = p\\) when \\(X\\sim Binom(size, prob)\\).\nFor discrete distributions, there are finitely many probabilities and therefore there may not be an exact value of \\(q\\) to make the equation true.\n\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\nHypergeometric Distribution\nJust like the binomial distribution, R has the hypergeometric distribution built into it. dbinom() needed the size and the probability, whereas dhyper() needs the parameters:\n\nm = number of successes (\\(a\\) in our notation)\nn = number of failures (\\(N - a\\) in our notation)\nk = number of things chosen (\\(n\\) in our notation)\n\nNote that we’ve already done a hypergeometic problem - the lottery example! Copied from above, let’s choose 6 winning numbers out of 7 possible successes and 49 total things to choose from:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nProbability Distributions are the d* series of functions.\n\n\n\ndhyper(x = x, m = a, n = N - a, k = n) calculates \\(P(X = k)\\), where \\(X \\sim Hyper(n, a, N)\\).\n\n\nFor example 2.4.2: We want the probability that no more than 1 container has trace amounts of benzene, i.e. we want \\(P(X = 0) + P(X = 1)\\), or equivalently \\(P(X \\le 1)\\).\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\n\n\n\n\nCumulative Distribution Functions are the p* series of functions\n\n\n\nphyper(q = x, m = a, n = N - a, k = n) calculates \\(P(X \\le x)\\), where \\(X \\sim Hyper(n, a, N)\\).\n\n\nAs noted in the slides, \\(n\\) is much smaller than \\(N\\), so the replacement has very little affect on the answer. If instead we were choosing 10 things out of 10000 with probability of success \\(a / N\\), then we have \\(X \\sim Binom(10, 1000/10000)\\):\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nThis number is very very close! In general, if we’re sampling a small portion of our potential space, then replacement has a very small effect.",
    "crumbs": [
      "Pre-Midterm",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Discrete Distribution Functions</span>"
    ]
  },
  {
    "objectID": "04-Normal.html",
    "href": "04-Normal.html",
    "title": "4  The Normal Distributions",
    "section": "",
    "text": "4.1 The Probability Density Function\nProbability densities are mostly used to draw the plot of the normal distribution. Instead, we use the CDF for pretty much everything.",
    "crumbs": [
      "Pre-Midterm",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>The Normal Distributions</span>"
    ]
  },
  {
    "objectID": "04-Normal.html#the-probability-density-function",
    "href": "04-Normal.html#the-probability-density-function",
    "title": "4  The Normal Distributions",
    "section": "",
    "text": "Probability Densities are the d* series of functions.\n\n\n\ndnorm(x = x, mu = mu, sigma = sigma) calculates \\(P(X = x)\\), where \\(X \\sim Norm(\\mu, \\sigma)\\).",
    "crumbs": [
      "Pre-Midterm",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>The Normal Distributions</span>"
    ]
  },
  {
    "objectID": "04-Normal.html#the-cumulative-distribution-function",
    "href": "04-Normal.html#the-cumulative-distribution-function",
    "title": "4  The Normal Distributions",
    "section": "4.2 The Cumulative Distribution Function",
    "text": "4.2 The Cumulative Distribution Function\n\n\n\n\n\n\nCDFs are the p* series of functions.\n\n\n\npnorm(x = x, mu = mu, sigma = sigma) calculates \\(P(X \\le x)\\), where \\(X \\sim Norm(\\mu, \\sigma)\\).\n\n\nSolution for Example 3.4.1:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nStandard Normal Probabilities\nI have built a friendly app to help calculate standard normal probabilities. Feel free to bookmark this standalone version and use it for assignment questions (but be aware you’ll need to use the Z-table for the midterm/exam)!\n#| standalone: true\n#| viewerHeight: 700\n# pnorm\n\nlibrary(shiny)\nlibrary(ggplot2)\n\nui &lt;- fluidPage(\n    \n    # Application title\n    titlePanel(\"Normal Probabilities\"),\n    \n    sidebarLayout(\n        sidebarPanel(\n            sliderInput(\"lohi\",\n                \"Z values (-4 for -Inf)\",\n                min = -4,\n                max = 4,\n                value = c(-4, 1.96),\n                step = 0.01)\n        ),\n        \n        mainPanel(\n            plotOutput(\"distPlot\")\n        )\n    )\n)\n\nserver &lt;- function(input, output) {\n    \n    output$distPlot &lt;- renderPlot({\n        lo &lt;- input$lohi[1]\n        hi &lt;- input$lohi[2]\n        \n        xseq &lt;- seq(-4,4,0.01)\n        yseq &lt;- dnorm(xseq)\n        \n        xrib &lt;- seq(lo, hi, 0.01)\n        yrib &lt;- dnorm(xrib)\n        \n        if(lo &gt; -4 & hi &lt; 4){\n            mytitle &lt;- paste0(\"pnorm(\", hi, \") - pnorm(\",lo,\") = \", \n                round(pnorm(hi) - pnorm(lo), 4))\n            addtox &lt;- c(lo, hi)\n            arrows &lt;- list(\n                annotate(\"segment\", x = c(lo, hi), y = c(-0.05, -0.1),  size = 0.8, \n                    colour = \"darkorchid\",\n                    xend = c(-4,-4), yend = c(-0.05, -0.1), arrow = arrow()),\n                annotate(\"text\", x = mean(c(lo, -4)), y = -0.05, vjust = -0.5, \n                    label = paste0(\"pnorm(\", lo, \")=\", round(pnorm(lo), 3))),\n                annotate(\"text\", x = mean(c(hi, -4)), y = -0.1, vjust = -0.5, \n                    label = paste0(\"pnorm(\", hi, \")=\", round(pnorm(hi), 3)))\n            )\n        } else if(hi &lt; 4){\n            mytitle &lt;- paste0(\"pnorm(\", hi, \") = \", round(pnorm(hi), 4))\n            addtox &lt;- hi\n            ydouble &lt;- c(0,0)\n            arrows &lt;- list(\n                annotate(\"segment\", x = hi, y = -0.05,  size = 0.8, \n                    colour = \"darkorchid\",\n                    xend = -4, yend = -0.05, arrow = arrow()),\n                annotate(\"text\", x = mean(c(hi, -4)), y = -0.05, vjust = -0.5, \n                    label = paste0(\"pnorm(\", hi, \")=\", round(pnorm(hi), 3)))\n            )\n        } else {\n            mytitle &lt;- paste0(\"1 - pnorm(\", lo, \") = \", \n                round(1 - pnorm(lo), 4))\n            addtox &lt;- lo\n            ydouble &lt;- c(0,0)\n            arrows &lt;- list(\n                annotate(\"segment\", x = lo, y = -0.05, size = 0.8, \n                    colour = \"darkorchid\",\n                    xend = -4, yend = -0.05, arrow = arrow()),\n                annotate(\"text\", x = mean(c(lo, -4)), y = -0.05, vjust = -0.5, \n                    label = paste0(\"pnorm(\", lo, \")=\", round(pnorm(lo), 3)))\n            )\n        }\n        \n        ggplot() + \n            geom_ribbon(aes(xmin = xrib, x=xrib, ymin = 0, ymax = yrib),\n                fill = \"darkorchid\", alpha = 0.4) +\n            geom_line(aes(x = xseq, y = yseq), linewidth = 1) +\n            scale_x_continuous(breaks = c(seq(-4,4,2))) +\n            theme_bw() + \n            annotate(\"text\", x = addtox, y = rep(-0.01, length(addtox)), \n                label = addtox) + \n            labs(x = \"x\", y = \"dnorm(x)\", title = mytitle,\n                caption = \"Created by Devan Becker\\nGithub: DBecker7/DB7_TeachingApps\") + \n            theme(title = element_text(size = 16), \n                axis.text = element_text(size = 14)) +\n            arrows\n    })\n}\n\n# Run the application \nshinyApp(ui = ui, server = server)\nVerify the following with the Z-tables (and try them in the app above):\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Pre-Midterm",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>The Normal Distributions</span>"
    ]
  },
  {
    "objectID": "04-Normal.html#the-inverse-cdf",
    "href": "04-Normal.html#the-inverse-cdf",
    "title": "4  The Normal Distributions",
    "section": "4.3 The Inverse CDF",
    "text": "4.3 The Inverse CDF\n\n\n\n\n\n\nQuantile Functions are the d* series of functions.q\n\n\n\nqnorm(p = p, mu = mu, sigma = sigma) calculates the value \\(q\\) such that \\(P(X = q) = p\\), where \\(X \\sim Norm(\\mu, \\sigma)\\).\n\n\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Pre-Midterm",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>The Normal Distributions</span>"
    ]
  },
  {
    "objectID": "a1-playground.html",
    "href": "a1-playground.html",
    "title": "Appendix A — Playground",
    "section": "",
    "text": "The following R code chunk can be used for whatever you please!\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Playground</span>"
    ]
  }
]