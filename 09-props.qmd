---
title: Tests for Proportion(s)
---

## One-Sample Proportions

Note that proportion tests are only valid when $np > 15$ and $n(1-p)>15$. [Here's why.](https://shinylive.io/r/app/#code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKAZwAtaJWAlAB0IIgK60ABAB4AtJIBm1CQBMAClADmcdiMn7JnWirj0WGiHGq6IBu4bonGASQioxpXZCF5JPgHJiMPRwjJJECpKkjLRQ1Jw+uJIAjEnJAAzpSQCsuHr2BVAQtDBQ5JIAvJJ0nJ585IwAbnGVktmZAgJ5tgUOxqGu7p4+qIl+YGqMRPQY4ZGcYgQEcJwJvlkpSekYufm9BkUlZXCtNXVkoc3Ure3pnd37BNxwBADW9EQAHoMeXhBEjBgYx8ABFmAB3ST+AGla4AQXQU0+R1ItBIAH4xgAxOEAGQAygBRYQ9fRdPaSUp8CxWdioahEUgAeQ8Qy89MZPi6khJJJEnEuoRk8gUYggBFRJHYfCGSSIrI8AkkIAp8tIQwAJBzSMLJIwKE41AzPCrSfYYGJdTKPBrbAAqSTW0hail2IyaUq6zgAR0Yngtkgd7GSknkTq1nVdBhUAu9Xrg3vYG3DEDSJMesfjiYD8gAzHb3aUkgGANSSfOFqBbDCZZLp3r-QGZuSSFSNmDsAix4tiJKV+sFeh8IgwZvyFRD-4dmMJvu0ABeJyqKaSqCm9Fa4dQA-s2vYM7j8m2uUkk5H3airFQS-G3C5Uf0dEsnH3maPOySZ9Hs8v19aPjWHc7FoSJpTcG12yA3onxWTsL3bC9iGuKoACYdwAXxJdCRH5Xh+ARVB2AkVoJD7QUwiqAUmlCEkwHQgBdIA) Notice how the normal approximation goes off the edges of the plot when $np$ is small or $n(1-p)$ is large.

### R as a calculator

Confidence interval from class:

```{webr-r}
successes <- 515
n <- 1921

phat <- successes / n
cat("phat: ", phat)

se_phat <- sqrt(phat * (1 - phat) / n)
cat("se_phat: ", se_phat)

# For a 95% CI, we need 2.5% to the left
z_star <- abs(qnorm((1 - 0.95) / 2))
cat("z_star: ", z_star)

phat + c(-1, 1) * z_star * se_phat
```

### R as a sophisticated statistics program

R does a few slightly different things to account for the fact that the normal distribution is continuous but the binomial distribution is discrete, so the answer differs slightly (this is important for WeBWorK - check your work with R, but do it by hand)!

```{webr-r}
prop.test(x = 515, n = 1921)
```

Notice that R also produces a hypothesis test. By default, it checks for $H_0:p = 0.5$ versus a two-sided alternative. 

For proportions, a confidence interval is **_not_** equivalent to a two-sided hypothesis test - the CI and the HT each use a different standard error!

## Two-Sample Proportions

Again, R makes a great calculator - it lets you save numbers for use (and double-checking) later. Make sure you can do this by hand for the exam, though!!!

```{webr-r}
n_1 <- 2841
x_1 <- 77

n_2 <- 2297
x_2 <- 107

C <- 0.95

phat_1 <- x_1 / n_1
phat_1
var_phat_1 <- phat_1 * (1 - phat_1) / n_1

phat_2 <- x_2 / n_2
phat_2
var_phat_2 <- phat_2 * (1 - phat_2) / n_2

obs <- phat_1 - phat_2
obs
se_obs <- sqrt(var_phat_1 + var_phat_2)
se_obs

z_star <- abs(qnorm((1 - C) / 2))
z_star

obs + c(-1, 1) * z_star * se_obs
```

The `prop.test()` function also works with two samples! Again, R does some more sophisticated calculations to account for approximating a discrete distribution (Binomial) with a continuous distribution (Normal), called *continuity correction*.

*Question*: If we had done a "Plus Four" interval for the data above, do you think the it would be closer to R's answer or further away? Think about it, then try it!

```{webr-r}
successes <- c(77, 107)
sample_sizes <- c(2841, 2297)
prop.test(x = successes, n = sample_sizes)
```

Notice that R also does a hypothesis test for you! How nice :)

## Hypothesis Tests

From the Defective Computer Parts example:

```{webr-r}
x_1 <- 10
n_1 <- 500
phat_1 <- x_1 / n_1

x_2 <- 12
n_2 <- 400
phat_2 <- x_2 / n_2

# If the null is true, these are all from the same population
phat <- (x_1 + x_2) / (n_1 + n_2)
se_phat <- sqrt( phat * (1 - phat) * (1 / n_1 + 1 / n_2 ))

test_stat <- (phat_1 - phat_2 - 0) / se_phat

2 * pnorm(-abs(test_stat))
```

```{webr-r}
prop.test(x = c(10, 12), n = c(500, 400))
```


